{
    "rules": {
        "users": {
            //need to check username availability from outside
            ".read": "true",
            "$uid": {
                //only change oneself's user data
                ".write": "$uid === auth.uid",
                "games": {
                    //...but a user can challenge all other users
                    ".write": "auth != null"
                },
                //allow setting online=false after logging out
                "online": {
                    ".write": "(auth == null && newData.val() == false) || ($uid === auth.uid && newData.val() == true)"
                },
                //only increment points by 1 (equal) or 2 (win) or set to 0 (new user)
                "points": {
                    ".write": "$uid === auth.uid && (newData.val() - data.val() <= 2 || newData.val() == 0)"
                }
            },
            ".indexOn": ["displayName", "online"]
        },
        "games": {
            "$gameId": {
                //you can change a game 1) if it's your turn to play 
                //2) if the game doesnÂ´t exist AND you supply the players of which one is yourself, 
                //3) if you remove the game AND one of the players was yourself
                ".write": "(auth != null && data.child('players/' + auth.uid + '/turn').val() == true) || (auth != null && newData.val() == null && data.hasChildren(['players/' + auth.uid])) || (auth != null && !data.exists() && newData.hasChildren(['players/' + auth.uid]))",
                //you can see a game if you're one of the players.
                ".read": "data.child('players/' + auth.uid).exists()",
                //you can only submit yourself as winner
                "won": {
                    ".validate": "newData.val() == auth.uid"
                }

            }
        }
    }
}